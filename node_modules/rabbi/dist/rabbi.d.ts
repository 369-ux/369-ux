/// <reference types="node" />
import { Actor } from './actor';
import { log } from './logger';
import { getConnection, getChannel, publish } from './amqp';
export { events } from './events';
import * as Joi from '@hapi/joi';
import * as delay from 'delay';
export { requireDirectory } from './require';
export declare function getDirectories(source: string): string[];
export declare function startActors(actorNames?: never[]): void;
export declare function init(): Promise<void>;
declare function requireHandlersDirectory(dirname: string): any;
export declare function jToB(json: any): Buffer;
export { Actor, log, getConnection, getChannel, publish, delay, Joi, requireHandlersDirectory };
interface StartActorsDirectoryOpts {
    exclude?: string[];
    include?: string[];
}
interface ActorHandle {
    path: string;
    name: string;
    actor?: Actor;
}
export declare function startActorsDirectory(directoryIndexPath: string, opts?: StartActorsDirectoryOpts): Promise<ActorHandle[]>;
//# sourceMappingURL=rabbi.d.ts.map